import sys
from note import Note
from notebook import Notebook

class Menu:
    ''' 메뉴를 보여주고 사용자의 선택에 적절히 반응하는 클래스 '''
    def __init__(self):
        # 메모를 저장할 빈 Notebook 객체를 만든다.
        self.notebook = Notebook()
        
        # 사용자가 선택한 메뉴 번호와 호출할 메소드를
        # 연결한 dict 객체를 생성한다.
        self.choices = {
            "1" : self.show_notes,
            "2" : self.search_notes,
            "3" : self.add_note,
            "4" : self.modify_note,
            "5" : self.delete_note,
            "6" : self.quit
        }
    
    def display_menu(self):
        ''' 메뉴를 출력하는 메소드'''
        print("""
        Notebook Menu
        
        1. Show All Notes
        2. Search Notes
        3. Add A New Note
        4. Modify Note
        5. Remove Note
        6. Quit
        """)
        
    def run(self):
        ''' 메뉴를 보여주고 사용자의 선택을 받아 적절한 메소드를 실행하는 메소드 '''
        while True:
            self.display_menu()
            choice = input("원하는 작업의 번호: ")
            action = self.choices.get(choice)
            
            if action:
                action()
            else:
                print("{0} 는 올바른 선택이 아닙니다.".format(choice))
                
    def show_notes(self, notes = None):
        ''' 현재 저장된 Notebook의 내용을 보여주는 메소드 '''
        if not notes:
            notes = self.notebook.notes
        for note in notes:
            print("{0}: {1}, {2}\n{3}".format(note.id, note.title, note.content, note.tags))
            
    def search_notes(self):
        ''' 검색할 문자열을 받아 현재 저장된 Note'''
        search_string = input("검색할 문자열:")
        notes = self.notebook.search(search_string)
        self.show_notes(notes)
        
    def add_note(self):
        ''' 새로운 노트를 추가하는 메소드'''
        title = input("제목: ")
        content = input("내용: ")
        tags = input("태그: ")
        
        self.notebook.add_note(title, content, tags)
        print("새 메모가 저장되었습니다.")
        
    def modify_note(self):
        id = int(input("수정할 메모의 일련번호: "))
        title = input("새로운 제목: ")
        content = input("새로운 내용: ")
        tags = input("새로운 태그: ")
           
        if title:
            self.notebook.modify_title(id, title)
        if content:
            self.notebook.modify_content(id, content)
        if tags:
            self.notebook.modify_tags(id , tags)
            
    def delete_note(self):
        id = int(input("삭제할 메모의 일련번호: "))
        
        if id:
            self.notebook.delete_note(id)
            
    def quit(self):
        print("프로그램을 종료합니다...")
        sys.exit()
        
